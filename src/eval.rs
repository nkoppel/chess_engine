use crate::position::*;
use crate::gen_table::{print_board, LocStack};

const PAWN   : i32 = 100;
const KNIGHT : i32 = 320;
const BISHOP : i32 = 330;
const ROOK   : i32 = 500;
const QUEEN  : i32 = 900;

const PAWN_TABLE:[i32;64] = [
    100, 100, 100, 100, 100, 100, 100, 100, 
    105, 110, 110,  80,  80, 110, 110, 105, 
    105,  95,  90, 100, 100,  90,  95, 105, 
    100, 100, 100, 130, 130, 100, 100, 100, 
    105, 105, 110, 125, 125, 110, 105, 105, 
    110, 110, 120, 130, 130, 120, 110, 110, 
    150, 150, 150, 150, 150, 150, 150, 150, 
    100, 100, 100, 100, 100, 100, 100, 100
];

const KNIGHT_TABLE:[i32; 64] = [
    270, 280, 290, 290, 290, 290, 280, 270, 
    280, 300, 320, 320, 320, 320, 300, 280, 
    290, 320, 330, 335, 335, 330, 320, 290, 
    290, 325, 335, 340, 340, 335, 325, 290, 
    290, 320, 335, 340, 340, 335, 320, 290, 
    290, 325, 330, 335, 335, 330, 325, 290, 
    280, 300, 320, 325, 325, 320, 300, 280, 
    270, 280, 290, 290, 290, 290, 280, 270, 
];

const BISHOP_TABLE:[i32; 64] = [
    310, 320, 320, 320, 320, 320, 320, 310, 
    320, 335, 330, 330, 330, 330, 335, 320, 
    320, 340, 340, 340, 340, 340, 340, 320, 
    320, 330, 340, 340, 340, 340, 330, 320, 
    320, 335, 335, 340, 340, 335, 335, 320, 
    320, 330, 335, 340, 340, 335, 330, 320, 
    320, 330, 330, 330, 330, 330, 330, 320, 
    310, 320, 320, 320, 320, 320, 320, 310, 
];

const ROOK_TABLE:[i32; 64] = [
    500, 500, 500, 500, 500, 500, 500, 500, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    505, 510, 510, 510, 510, 510, 510, 505, 
    500, 500, 500, 505, 505, 500, 500, 500
];

const QUEEN_TABLE:[i32; 64] = [
    880, 890, 890, 895, 895, 890, 890, 880, 
    890, 900, 905, 900, 900, 900, 900, 890, 
    890, 905, 905, 905, 905, 905, 900, 890, 
    890, 900, 905, 905, 905, 905, 900, 890, 
    895, 900, 905, 905, 905, 905, 900, 895, 
    900, 900, 905, 905, 905, 905, 900, 895, 
    890, 900, 900, 900, 900, 900, 900, 890, 
    880, 890, 890, 895, 895, 890, 890, 880
];

const KING_TABLE:[i32; 64] = [
     20, 30, 10,  0,  0, 10, 30, 20,
     20, 20,  0,  0,  0,  0, 20, 20,
    -10,-20,-20,-20,-20,-20,-20,-10,
    -20,-30,-30,-40,-40,-30,-30,-20,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
];

const OTHER_PAWN_TABLE:[i32;64] = [
    100, 100, 100, 100, 100, 100, 100, 100, 
    150, 150, 150, 150, 150, 150, 150, 150, 
    110, 110, 120, 130, 130, 120, 110, 110, 
    105, 105, 110, 125, 125, 110, 105, 105, 
    100, 100, 100, 120, 120, 100, 100, 100, 
    105,  95,  90,  95,  95,  90,  95, 105, 
    105, 110, 110,  80,  80, 110, 110, 105, 
    100, 100, 100, 100, 100, 100, 100, 100
];

const OTHER_KNIGHT_TABLE:[i32; 64] = [
    270, 280, 290, 290, 290, 290, 280, 270, 
    280, 300, 320, 320, 320, 320, 300, 280, 
    290, 320, 330, 335, 335, 330, 320, 290, 
    290, 325, 335, 340, 340, 335, 325, 290, 
    290, 320, 335, 340, 340, 335, 320, 290, 
    290, 325, 330, 335, 335, 330, 325, 290, 
    280, 300, 320, 325, 325, 320, 300, 280, 
    270, 280, 290, 290, 290, 290, 280, 270, 
];

const OTHER_BISHOP_TABLE:[i32; 64] = [
    310, 320, 320, 320, 320, 320, 320, 310, 
    320, 330, 330, 330, 330, 330, 330, 320, 
    320, 330, 335, 340, 340, 335, 330, 320, 
    320, 335, 335, 340, 340, 335, 335, 320, 
    320, 330, 340, 340, 340, 340, 330, 320, 
    320, 340, 340, 340, 340, 340, 340, 320, 
    320, 335, 330, 330, 330, 330, 335, 320, 
    310, 320, 320, 320, 320, 320, 320, 310, 
];

const OTHER_ROOK_TABLE:[i32; 64] = [
    500, 500, 500, 500, 500, 500, 500, 500, 
    505, 510, 510, 510, 510, 510, 510, 505, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    495, 500, 500, 500, 500, 500, 500, 495, 
    500, 500, 500, 505, 505, 500, 500, 500
];

const OTHER_QUEEN_TABLE:[i32; 64] = [
    880, 890, 890, 895, 895, 890, 890, 880, 
    890, 900, 900, 900, 900, 900, 900, 890, 
    890, 900, 905, 905, 905, 905, 900, 890, 
    895, 900, 905, 905, 905, 905, 900, 895, 
    900, 900, 905, 905, 905, 905, 900, 895, 
    890, 905, 905, 905, 905, 905, 900, 890, 
    890, 900, 905, 900, 900, 900, 900, 890, 
    880, 890, 890, 895, 895, 890, 890, 880
];

const OTHER_KING_TABLE:[i32; 64] = [
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -20,-30,-30,-40,-40,-30,-30,-20,
    -10,-20,-20,-20,-20,-20,-20,-10,
    20, 20,  0,  0,  0,  0, 20, 20,
    20, 30, 10,  0,  0, 10, 30, 20
];

const THREATS: i32 = 1;

fn eval_tables(bits: u64, table: [i32; 64]) -> i32 {
    let mut out = 0;

    for loc in LocStack(bits) {
        out += table[loc];
    }

    out
}

pub fn eval(pos: &mut Position) -> i32 {
    let mut out = 0;
    let pawn   = pos.board.pawns();
    let knight = pos.board.knight();
    let queen  = pos.board.queen();
    let bishop = pos.board.bishop & !queen;
    let rook   = pos.board.rook   & !queen;
    pos.set_threats();
    out -= pos.threats.count_ones() as i32 * THREATS;
    pos.board.invert();
    out += pos.board.threats(pos.tables).count_ones() as i32 * THREATS;
    pos.board.invert();

    out += eval_tables(pos.board.curr & pawn  , PAWN_TABLE);
    out += eval_tables(pos.board.curr & knight, KNIGHT_TABLE);
    out += eval_tables(pos.board.curr & bishop, BISHOP_TABLE);
    out += eval_tables(pos.board.curr & rook  , ROOK_TABLE);
    out += eval_tables(pos.board.curr & queen , QUEEN_TABLE);
    out += eval_tables(1 << pos.board.cking   , KING_TABLE);

    out -= eval_tables(pos.board.other & pawn  , OTHER_PAWN_TABLE);
    out -= eval_tables(pos.board.other & knight, OTHER_KNIGHT_TABLE);
    out -= eval_tables(pos.board.other & bishop, OTHER_BISHOP_TABLE);
    out -= eval_tables(pos.board.other & rook  , OTHER_ROOK_TABLE);
    out -= eval_tables(pos.board.other & queen , OTHER_QUEEN_TABLE);
    out -= eval_tables(1 << pos.board.oking, OTHER_KING_TABLE);
    out
}
